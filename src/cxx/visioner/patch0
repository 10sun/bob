diff --git a/CMakeLists.txt b/CMakeLists.txt
index e62ac36..20c71ca 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,6 +7,16 @@ project (visioner)
 find_package (Qt4 COMPONENTS QtCore QtGui REQUIRED)
 include (${QT_USE_FILE})
 
+include(FindBoost)
+set(Boost_USE_MULTITHREADED ON)
+find_package(Boost COMPONENTS thread serialization program_options)
+include_directories(SYSTEM ${boost_INCLUDE_DIRS})
+link_directories(${boost_LIBRARY_DIRS})
+
+# Adds Torch external dependency
+include_directories(${TORCH_INCLUDE_DIR})
+link_directories(${TORCH_LIBRARY_DIR})
+
 # By default only QtCore and QtGui modules are enabled
 # other modules must be enabled like this:
 #set (QT_USE_QT3SUPPORT TRUE)   
diff --git a/projects/CMakeLists.txt b/projects/CMakeLists.txt
index b1e7c1e..220fc26 100644
--- a/projects/CMakeLists.txt
+++ b/projects/CMakeLists.txt
@@ -6,8 +6,7 @@ include_directories (${visioner_SOURCE_DIR}/src/ml/trainers)
 include_directories (${visioner_SOURCE_DIR}/src/ml/losses)
 include_directories (${visioner_SOURCE_DIR}/src/proc)
 
-set (libs "visioner;lbfgs;boost_thread;boost_serialization;boost_program_options;${QT_LIBRARIES}" 
-	CACHE INTERNAL "libs")
+set (libs "torch_visioner" CACHE INTERNAL "libs")
 
 # Build an executable for each source file
 add_executable (	trainer 		trainer.cpp)
diff --git a/projects/vgui/CMakeLists.txt b/projects/vgui/CMakeLists.txt
index 9a18deb..c3ef58b 100644
--- a/projects/vgui/CMakeLists.txt
+++ b/projects/vgui/CMakeLists.txt
@@ -51,6 +51,5 @@ ADD_EXECUTABLE (vgui ${vgui_SRC} ${vgui_MOCS} ${vgui_RESOURCES} ${vgui_UIS})
 
 # last thing we have to do is to tell CMake what libraries our executable needs,
 # luckily FIND_PACKAGE prepared QT_LIBRARIES variable for us:
-set (libs "visioner;lbfgs;boost_thread;boost_serialization;boost_program_options;${QT_LIBRARIES}" 
-	CACHE INTERNAL "libs")
+set (libs "torch_visioner" CACHE INTERNAL "libs")
 TARGET_LINK_LIBRARIES (vgui ${libs})
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 0f051ca..d32a223 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -20,5 +20,10 @@ foreach (subdir ${visioner_SUBDIRS})
 endforeach (subdir)
 
 # Build the library with the source files gathered from the sub-directories
-add_library (visioner ${visioner_SRC})
+add_library (torch_visioner SHARED ${visioner_SRC})
+target_link_libraries(torch_visioner torch_lbfgs ${Boost_THREAD_LIBRARY_RELEASE} ${Boost_SERIALIZATION_LIBRARY_RELEASE} ${Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE} ${QT_LIBRARIES})
+install(TARGETS torch_visioner EXPORT torch LIBRARY DESTINATION lib)
 include_directories (${visioner_INCLUDE})
+
+# Installs header files
+add_custom_target(visioner-cxx_header_install ALL COMMAND mkdir -p ${CMAKE_INSTALL_PREFIX}/include/torch COMMAND rsync -a --include='*/' --include='*.h' --exclude='*' ${CMAKE_CURRENT_SOURCE_DIR}/ ${CMAKE_INSTALL_PREFIX}/include/torch/visioner COMMENT "Installing torch::visioner headers...")
diff --git a/src/ml/trainers/joptimizer.cpp b/src/ml/trainers/joptimizer.cpp
index b9da52b..eaae973 100644
--- a/src/ml/trainers/joptimizer.cpp
+++ b/src/ml/trainers/joptimizer.cpp
@@ -17,7 +17,7 @@
 
 
 #include "joptimizer.h"
-#include <lbfgs.h>
+#include <lbfgs/lbfgs.h>
 
 namespace visioner
 {	
diff --git a/src/ml/trainers/linesearch.cpp b/src/ml/trainers/linesearch.cpp
index 00cd6d6..07c2b09 100644
--- a/src/ml/trainers/linesearch.cpp
+++ b/src/ml/trainers/linesearch.cpp
@@ -17,7 +17,7 @@
 
 
 #include "linesearch.h"
-#include <lbfgs.h>
+#include <lbfgs/lbfgs.h>
 
 namespace visioner
 {	
