#!/usr/bin/env python
# vim: set fileencoding=utf-8 :
# Laurent El Shafey <Laurent.El-Shafey@idiap.ch>
# Wed 6 Jul 20:58:23 2011 

"""This script creates the XM2VTS database in a single pass.
"""

import os

from .models import *
from ..utils import session


def nodot(item):
  """Can be used to ignore hidden files, starting with the . character."""
  return item[0] != '.'

def add_clients(session):
  """Add clients to the XM2VTS database."""
  # clients
  session.add(Client(3, 'client'))
  session.add(Client(4, 'client'))
  session.add(Client(5, 'client'))
  session.add(Client(6, 'client'))
  session.add(Client(9, 'client'))
  session.add(Client(12, 'client'))
  session.add(Client(13, 'client'))
  session.add(Client(16, 'client'))
  session.add(Client(17, 'client'))
  session.add(Client(18, 'client'))
  session.add(Client(19, 'client'))
  session.add(Client(20, 'client'))
  session.add(Client(21, 'client'))
  session.add(Client(22, 'client'))
  session.add(Client(24, 'client'))
  session.add(Client(25, 'client'))
  session.add(Client(26, 'client'))
  session.add(Client(27, 'client'))
  session.add(Client(29, 'client'))
  session.add(Client(30, 'client'))
  session.add(Client(32, 'client'))
  session.add(Client(33, 'client'))
  session.add(Client(34, 'client'))
  session.add(Client(35, 'client'))
  session.add(Client(36, 'client'))
  session.add(Client(37, 'client'))
  session.add(Client(38, 'client'))
  session.add(Client(40, 'client'))
  session.add(Client(41, 'client'))
  session.add(Client(42, 'client'))
  session.add(Client(45, 'client'))
  session.add(Client(47, 'client'))
  session.add(Client(49, 'client'))
  session.add(Client(50, 'client'))
  session.add(Client(51, 'client'))
  session.add(Client(52, 'client'))
  session.add(Client(53, 'client'))
  session.add(Client(54, 'client'))
  session.add(Client(55, 'client'))
  session.add(Client(56, 'client'))
  session.add(Client(58, 'client'))
  session.add(Client(60, 'client'))
  session.add(Client(61, 'client'))
  session.add(Client(64, 'client'))
  session.add(Client(65, 'client'))
  session.add(Client(66, 'client'))
  session.add(Client(68, 'client'))
  session.add(Client(69, 'client'))
  session.add(Client(71, 'client'))
  session.add(Client(72, 'client'))
  session.add(Client(73, 'client'))
  session.add(Client(74, 'client'))
  session.add(Client(75, 'client'))
  session.add(Client(78, 'client'))
  session.add(Client(79, 'client'))
  session.add(Client(80, 'client'))
  session.add(Client(82, 'client'))
  session.add(Client(85, 'client'))
  session.add(Client(89, 'client'))
  session.add(Client(90, 'client'))
  session.add(Client(91, 'client'))
  session.add(Client(92, 'client'))
  session.add(Client(99, 'client'))
  session.add(Client(101, 'client'))
  session.add(Client(102, 'client'))
  session.add(Client(103, 'client'))
  session.add(Client(105, 'client'))
  session.add(Client(108, 'client'))
  session.add(Client(110, 'client'))
  session.add(Client(112, 'client'))
  session.add(Client(113, 'client'))
  session.add(Client(115, 'client'))
  session.add(Client(116, 'client'))
  session.add(Client(121, 'client'))
  session.add(Client(122, 'client'))
  session.add(Client(123, 'client'))
  session.add(Client(124, 'client'))
  session.add(Client(125, 'client'))
  session.add(Client(126, 'client'))
  session.add(Client(129, 'client'))
  session.add(Client(132, 'client'))
  session.add(Client(133, 'client'))
  session.add(Client(135, 'client'))
  session.add(Client(136, 'client'))
  session.add(Client(137, 'client'))
  session.add(Client(138, 'client'))
  session.add(Client(140, 'client'))
  session.add(Client(141, 'client'))
  session.add(Client(145, 'client'))
  session.add(Client(146, 'client'))
  session.add(Client(148, 'client'))
  session.add(Client(150, 'client'))
  session.add(Client(152, 'client'))
  session.add(Client(154, 'client'))
  session.add(Client(159, 'client'))
  session.add(Client(163, 'client'))
  session.add(Client(164, 'client'))
  session.add(Client(165, 'client'))
  session.add(Client(166, 'client'))
  session.add(Client(167, 'client'))
  session.add(Client(168, 'client'))
  session.add(Client(169, 'client'))
  session.add(Client(173, 'client'))
  session.add(Client(178, 'client'))
  session.add(Client(179, 'client'))
  session.add(Client(180, 'client'))
  session.add(Client(181, 'client'))
  session.add(Client(182, 'client'))
  session.add(Client(183, 'client'))
  session.add(Client(188, 'client'))
  session.add(Client(191, 'client'))
  session.add(Client(193, 'client'))
  session.add(Client(196, 'client'))
  session.add(Client(197, 'client'))
  session.add(Client(198, 'client'))
  session.add(Client(206, 'client'))
  session.add(Client(207, 'client'))
  session.add(Client(208, 'client'))
  session.add(Client(209, 'client'))
  session.add(Client(210, 'client'))
  session.add(Client(211, 'client'))
  session.add(Client(213, 'client'))
  session.add(Client(216, 'client'))
  session.add(Client(218, 'client'))
  session.add(Client(219, 'client'))
  session.add(Client(221, 'client'))
  session.add(Client(222, 'client'))
  session.add(Client(224, 'client'))
  session.add(Client(227, 'client'))
  session.add(Client(228, 'client'))
  session.add(Client(229, 'client'))
  session.add(Client(231, 'client'))
  session.add(Client(232, 'client'))
  session.add(Client(233, 'client'))
  session.add(Client(235, 'client'))
  session.add(Client(236, 'client'))
  session.add(Client(237, 'client'))
  session.add(Client(240, 'client'))
  session.add(Client(243, 'client'))
  session.add(Client(244, 'client'))
  session.add(Client(246, 'client'))
  session.add(Client(248, 'client'))
  session.add(Client(249, 'client'))
  session.add(Client(253, 'client'))
  session.add(Client(255, 'client'))
  session.add(Client(258, 'client'))
  session.add(Client(259, 'client'))
  session.add(Client(261, 'client'))
  session.add(Client(264, 'client'))
  session.add(Client(266, 'client'))
  session.add(Client(267, 'client'))
  session.add(Client(269, 'client'))
  session.add(Client(270, 'client'))
  session.add(Client(274, 'client'))
  session.add(Client(275, 'client'))
  session.add(Client(278, 'client'))
  session.add(Client(279, 'client'))
  session.add(Client(281, 'client'))
  session.add(Client(282, 'client'))
  session.add(Client(285, 'client'))
  session.add(Client(287, 'client'))
  session.add(Client(288, 'client'))
  session.add(Client(289, 'client'))
  session.add(Client(290, 'client'))
  session.add(Client(292, 'client'))
  session.add(Client(293, 'client'))
  session.add(Client(295, 'client'))
  session.add(Client(305, 'client'))
  session.add(Client(310, 'client'))
  session.add(Client(312, 'client'))
  session.add(Client(316, 'client'))
  session.add(Client(319, 'client'))
  session.add(Client(320, 'client'))
  session.add(Client(321, 'client'))
  session.add(Client(322, 'client'))
  session.add(Client(324, 'client'))
  session.add(Client(325, 'client'))
  session.add(Client(328, 'client'))
  session.add(Client(329, 'client'))
  session.add(Client(330, 'client'))
  session.add(Client(332, 'client'))
  session.add(Client(333, 'client'))
  session.add(Client(334, 'client'))
  session.add(Client(336, 'client'))
  session.add(Client(337, 'client'))
  session.add(Client(338, 'client'))
  session.add(Client(339, 'client'))
  session.add(Client(340, 'client'))
  session.add(Client(342, 'client'))
  session.add(Client(357, 'client'))
  session.add(Client(358, 'client'))
  session.add(Client(359, 'client'))
  session.add(Client(360, 'client'))
  session.add(Client(362, 'client'))
  session.add(Client(364, 'client'))
  session.add(Client(365, 'client'))
  session.add(Client(366, 'client'))
  session.add(Client(369, 'client'))
  session.add(Client(370, 'client'))
  session.add(Client(371, 'client'))
  # impostorDev 
  session.add(Client(0, 'impostorDev'))
  session.add(Client(2, 'impostorDev'))
  session.add(Client(7, 'impostorDev'))
  session.add(Client(46, 'impostorDev'))
  session.add(Client(57, 'impostorDev'))
  session.add(Client(62, 'impostorDev'))
  session.add(Client(83, 'impostorDev'))
  session.add(Client(93, 'impostorDev'))
  session.add(Client(104, 'impostorDev'))
  session.add(Client(120, 'impostorDev'))
  session.add(Client(143, 'impostorDev'))
  session.add(Client(157, 'impostorDev'))
  session.add(Client(158, 'impostorDev'))
  session.add(Client(177, 'impostorDev'))
  session.add(Client(187, 'impostorDev'))
  session.add(Client(189, 'impostorDev'))
  session.add(Client(203, 'impostorDev'))
  session.add(Client(212, 'impostorDev'))
  session.add(Client(215, 'impostorDev'))
  session.add(Client(242, 'impostorDev'))
  session.add(Client(276, 'impostorDev'))
  session.add(Client(284, 'impostorDev'))
  session.add(Client(301, 'impostorDev'))
  session.add(Client(314, 'impostorDev'))
  session.add(Client(331, 'impostorDev'))
  # impostorEval 
  session.add(Client(1, 'impostorEval'))
  session.add(Client(8, 'impostorEval'))
  session.add(Client(10, 'impostorEval'))
  session.add(Client(11, 'impostorEval'))
  session.add(Client(23, 'impostorEval'))
  session.add(Client(28, 'impostorEval'))
  session.add(Client(31, 'impostorEval'))
  session.add(Client(39, 'impostorEval'))
  session.add(Client(43, 'impostorEval'))
  session.add(Client(44, 'impostorEval'))
  session.add(Client(48, 'impostorEval'))
  session.add(Client(59, 'impostorEval'))
  session.add(Client(67, 'impostorEval'))
  session.add(Client(70, 'impostorEval'))
  session.add(Client(81, 'impostorEval'))
  session.add(Client(86, 'impostorEval'))
  session.add(Client(87, 'impostorEval'))
  session.add(Client(88, 'impostorEval'))
  session.add(Client(95, 'impostorEval'))
  session.add(Client(96, 'impostorEval'))
  session.add(Client(98, 'impostorEval'))
  session.add(Client(107, 'impostorEval'))
  session.add(Client(109, 'impostorEval'))
  session.add(Client(111, 'impostorEval'))
  session.add(Client(114, 'impostorEval'))
  session.add(Client(119, 'impostorEval'))
  session.add(Client(127, 'impostorEval'))
  session.add(Client(128, 'impostorEval'))
  session.add(Client(130, 'impostorEval'))
  session.add(Client(131, 'impostorEval'))
  session.add(Client(134, 'impostorEval'))
  session.add(Client(142, 'impostorEval'))
  session.add(Client(147, 'impostorEval'))
  session.add(Client(149, 'impostorEval'))
  session.add(Client(153, 'impostorEval'))
  session.add(Client(155, 'impostorEval'))
  session.add(Client(160, 'impostorEval'))
  session.add(Client(161, 'impostorEval'))
  session.add(Client(170, 'impostorEval'))
  session.add(Client(171, 'impostorEval'))
  session.add(Client(172, 'impostorEval'))
  session.add(Client(174, 'impostorEval'))
  session.add(Client(175, 'impostorEval'))
  session.add(Client(176, 'impostorEval'))
  session.add(Client(185, 'impostorEval'))
  session.add(Client(190, 'impostorEval'))
  session.add(Client(199, 'impostorEval'))
  session.add(Client(200, 'impostorEval'))
  session.add(Client(201, 'impostorEval'))
  session.add(Client(202, 'impostorEval'))
  session.add(Client(225, 'impostorEval'))
  session.add(Client(226, 'impostorEval'))
  session.add(Client(234, 'impostorEval'))
  session.add(Client(241, 'impostorEval'))
  session.add(Client(250, 'impostorEval'))
  session.add(Client(263, 'impostorEval'))
  session.add(Client(271, 'impostorEval'))
  session.add(Client(272, 'impostorEval'))
  session.add(Client(280, 'impostorEval'))
  session.add(Client(283, 'impostorEval'))
  session.add(Client(286, 'impostorEval'))
  session.add(Client(300, 'impostorEval'))
  session.add(Client(313, 'impostorEval'))
  session.add(Client(315, 'impostorEval'))
  session.add(Client(317, 'impostorEval'))
  session.add(Client(318, 'impostorEval'))
  session.add(Client(323, 'impostorEval'))
  session.add(Client(335, 'impostorEval'))
  session.add(Client(341, 'impostorEval'))
  session.add(Client(367, 'impostorEval'))

def add_files(session, imagedir):
  """Add files to the XM2VTS database."""
 
  def add_file(session, basename, client_dir):
    """Parse a single filename and add it to the list."""
    v = os.path.splitext(basename)[0].split('_')
    session.add(File(int(v[0]), os.path.join(client_dir, basename), int(v[1]), int(v[2])))
  
  file_list = os.listdir(imagedir)
  for cl_dir in filter(nodot, file_list):
    if os.path.isdir(os.path.join(imagedir, cl_dir)):
      client_dir = os.path.join(imagedir, cl_dir)
      for filename in filter(nodot, os.listdir(client_dir)):
        basename, extension = os.path.splitext(filename)
        add_file(session, basename, cl_dir)

def add_protocols(session):
  """Adds protocols"""
  # Protocol lp1
  session.add(Protocol('lp1', '', 'enrol', 1, 1))
  session.add(Protocol('lp1', '', 'enrol', 2, 1))
  session.add(Protocol('lp1', '', 'enrol', 3, 1))
  session.add(Protocol('lp1', 'dev', 'probe', 1, 2))
  session.add(Protocol('lp1', 'dev', 'probe', 2, 2))
  session.add(Protocol('lp1', 'dev', 'probe', 3, 2))
  session.add(Protocol('lp1', 'eval', 'probe', 4, 1))
  session.add(Protocol('lp1', 'eval', 'probe', 4, 2))
  
  # Protocol lp2
  session.add(Protocol('lp2', '', 'enrol', 1, 1))
  session.add(Protocol('lp2', '', 'enrol', 1, 2))
  session.add(Protocol('lp2', '', 'enrol', 2, 1))
  session.add(Protocol('lp2', '', 'enrol', 2, 2))
  session.add(Protocol('lp2', 'dev', 'probe', 3, 1))
  session.add(Protocol('lp2', 'dev', 'probe', 3, 2))
  session.add(Protocol('lp2', 'eval', 'probe', 4, 1))
  session.add(Protocol('lp2', 'eval', 'probe', 4, 2))

def create_tables(args):
  """Creates all necessary tables (only to be used at the first time)"""

  from sqlalchemy import create_engine
  engine = create_engine(args.location, echo=args.verbose)
  Client.metadata.create_all(engine)
  File.metadata.create_all(engine)
  Protocol.metadata.create_all(engine)

# Driver API
# ==========

def create(args):
  """Creates or re-creates this database"""

  dbfile = args.location.replace('sqlite:///','')

  if args.recreate: 
    if args.verbose and os.path.exists(dbfile):
      print('unlinking %s...' % dbfile)
    if os.path.exists(dbfile): os.unlink(dbfile)

  if not os.path.exists(os.path.dirname(dbfile)):
    os.makedirs(os.path.dirname(dbfile))

  # the real work...
  create_tables(args)
  s = session(args.dbname, echo=args.verbose)
  add_clients(s)
  add_files(s, args.imagedir)
  add_protocols(s)
  s.commit()
  s.close()

def add_command(subparsers):
  """Add specific subcommands that the action "create" can use"""

  parser = subparsers.add_parser('create', help=create.__doc__)

  parser.add_argument('--recreate', action='store_true', default=False,
      help="If set, I'll first erase the current database")
  parser.add_argument('--verbose', action='store_true', default=False,
      help="Do SQL operations in a verbose way")
  parser.add_argument('--imagedir', action='store', metavar='DIR',
      default='/idiap/resource/database/xm2vtsdb/images/frontal/',
      help="Change the relative path to the directory containing the images of the XM2VTS database (defaults to %(default)s)")
  
  parser.set_defaults(func=create) #action
